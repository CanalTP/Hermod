swagger: "2.0"
info:
  description: >
    This API aims to improve the transport data accuracy by allowing consumers to suggest patches for different
    resources.
  version: "0.1.0"
  title: "Hermod - the Crowd sourcing API"
  contact:
    email: "to-be-defined@navitia.io"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
tags:
- name: "stop_point_patch"
  description: "Suggest patches to improve stop point information"
- name: "status"
  description: "Verify the API status"
schemes:
- "https"
paths:
  /v1/stop_point_patches:
    post:
      tags:
        - "stop_point_patch"
      summary: "Create a stop point patch"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          schema:
            type: "object"
            required:
            - source
            - stop_point
            - stop_point_current_location
            - route
            properties:
              source:
                $ref: "#/definitions/Source"
              stop_point:
                $ref: "#/definitions/StopPoint"
              stop_point_current_location:
                $ref: "#/definitions/Coord"
              stop_point_patched_location:
                $ref: "#/definitions/Coord"
              route:
                $ref: "#/definitions/Route"
              gps:
                $ref: "#/definitions/Gps"
      responses:
        201:
          description: "Everything went fine"
        400:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/Errors"
      security:
      - api_key: []
  /v1/stop_point_patches/gps:
    post:
      tags:
      - "stop_point_patch"
      summary: "Create a stop point patch using the given GPS coord / accuracy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "body"
          schema:
            type: "object"
            required:
            - source
            - stop_point
            - stop_point_current_location
            - route_id
            - gps
            properties:
              source:
                $ref: "#/definitions/Source"
              stop_point:
                $ref: "#/definitions/StopPoint"
              stop_point_current_location:
                $ref: "#/definitions/Coord"
              route_id:
                type: "string"
                description: "Route id"
              gps:
                $ref: "#/definitions/Gps"
      responses:
        201:
          description: "Everything went fine"
        400:
          description: "Invalid request"
          schema:
            $ref: "#/definitions/Errors"
      security:
      - api_key: []
  /v1/status:
    get:
      summary: "Utility endpoint to check if the service is up and running"
      tags:
      - "status"
      produces:
      - "application/json"
      responses:
        200:
          description: "The API is reachable"
          schema:
            type: "object"
            properties:
              status:
                type: "string"
                enum: ["OK", "KO"]
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  Source:
    type: "object"
    required: ["type", "instance_name"]
    properties:
      type:
        type: "string"
        enum: ["nav_1", "nav_2"]
        description: "The navitia version to use"
      instance_name:
        type: "string"
        description: "Stop point name"
  StopPoint:
    type: "object"
    required: ["id", "name"]
    properties:
      id:
        type: "string"
        description: "Stop point id"
      name:
        type: "string"
        description: "Stop point name"
  Route:
    type: "object"
    required: ["id"]
    properties:
      id:
        type: "string"
        description: "Route id"
  Gps:
    type: "object"
    properties:
      location:
        $ref: '#/definitions/Coord'
      accuracy:
        type: "number"
        format: "float"
        description: "GPS accuracy (in meters)"
  Coord:
    type: "object"
    description: "Coordinates - WGS84"
    required: ["lat", "lon"]
    properties:
      lat:
        type: "number"
        format: "float"
      lon:
        type: "number"
        format: "float"
  Errors:
    type: "array"
    title: "Errors"
    items:
      type: "object"
      properties:
        error:
          type: "string"
          enum: ["invalid_request"]
          example: "invalid_request"
        message:
          type: "string"
          example: "param 'foo_bar' is missing"
